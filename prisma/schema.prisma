generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Game {
  id                      String                    @id @default(uuid())
  name                    String                    @unique
  image_url               String                    @db.Text
  description             String                    @db.Text
  players                 String
  playtime                String
  mechanics               String                    @db.Text
  categories              String                    @db.Text
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  baseGameId              String?
  isExpansion             Boolean                   @default(false)
  GameSessionGameJunction GameSessionGameJunction[]
  PlayerGameJunction      PlayerGameJunction[]
}

model Player {
  id                        String                      @id @default(uuid())
  name                      String
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  clerkId                   String?                     @unique
  nickname                  String?
  email                     String?                     @unique
  isSuperAdmin              Boolean                     @default(false)
  PlayerGameSessionJunction PlayerGameSessionJunction[]
  PlayerGameJunction        PlayerGameJunction[]
  PlayerGameGroupJunction   PlayerGameGroupJunction[]
}

model GameGroup {
  id                      String                    @id
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  name                    String                    @default("Game Night")
  hidden                  Boolean                   @default(false)
  PlayerGameGroupJunction PlayerGameGroupJunction[]
}

model PlayerGameSessionJunction {
  id            String      @id @default(uuid())
  playerId      String
  gameSessionId String
  position      Int?
  score         String?
  player        Player      @relation(fields: [playerId], references: [id])
  gameSession   GameSession @relation(fields: [gameSessionId], references: [id])

  @@unique([playerId, gameSessionId])
}

model GameSessionGameJunction {
  id            String      @id @default(uuid())
  gameId        String
  gameSessionId String
  game          Game        @relation(fields: [gameId], references: [id])
  gameSession   GameSession @relation(fields: [gameSessionId], references: [id])

  @@unique([gameId, gameSessionId])
}

model GameSession {
  id                        String                      @id @default(uuid())
  gameId                    String
  result                    String?
  status                    String
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  groupId                   String                      @default("game-night")
  description               String?
  PlayerGameSessionJunction PlayerGameSessionJunction[]
  GameSessionGameJunction   GameSessionGameJunction[]
}

model PlayerGameJunction {
  id        String   @id @default(uuid())
  gameId    String
  playerId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Game      Game     @relation(fields: [gameId], references: [id])
  Player    Player   @relation(fields: [playerId], references: [id])

  @@unique([gameId, playerId])
}

model PlayerGameGroupJunction {
  id                String    @id @default(uuid())
  groupId           String
  playerId          String
  role              String
  inviteStatus      String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  gameGroupIsActive Boolean   @default(false)
  GameGroup         GameGroup @relation(fields: [groupId], references: [id])
  Player            Player    @relation(fields: [playerId], references: [id])

  @@unique([groupId, playerId])
}
